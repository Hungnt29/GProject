@model GProject.WebApplication.Models.ProductMGRDTO
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using GProject.WebApplication.Models
@using GProject.Api.MyServices.Services;
@using GProject.Data.DomainClass;
@using GProject.WebApplication.Helpers;
@{
    ViewBag.Title = "Product Managerment";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Pager pager = new Pager();
    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }

    var lstBrand = await Commons.GetAll<Brand>(String.Concat(Commons.mylocalhost, "Brand/get-all-Brand"));
    IList<SelectListItem> StoreItems = new List<SelectListItem>();
    if (lstBrand.Count > 0)
    {
        StoreItems.Add(new SelectListItem()
                {
                    Value = "-1",
                    Text = "--Nhãn hiệu--",
                    Selected = "-1" == Model.BrandId.ToString(),
                });

        foreach (var br in lstBrand)
        {
            StoreItems.Add(new SelectListItem()
                    {
                        Value = br.Id.ToString(),
                        Text = br.Name,
                        Selected = br.Id == Model.BrandId,
                    });
        }
    }
}
<style>
    label {
        color: black;
    }

    h1 {
        color: black;
    }

    .sticky-header th {
        position: sticky;
        top: 0px;
        z-index: 1;
        background-color: #E5E5E5;
    }

    .sticky-table {
        border-collapse: separate !important;
    }

    .campic i {
        font-size: 35px;
        color: #000;
        margin: 5px 0;
        cursor: pointer;
    }

    .campic input[type="file"] {
        display: block;
    }

    .pip-file {
        position: relative;
    }

    .picThumb {
        max-height: 200px;
        border: 1px solid;
        padding: 1px;
        cursor: pointer;
    }

    .remove-img {
        position: absolute;
        bottom: 25px;
        right: -5px;
    }

    .campic .remove-img i {
        font-size: 20px;
        color: #fff;
        cursor: pointer;
        background: red;
        margin: 0;
        padding: 1px 4px 4px;
        border-radius: 20px;
    }
</style>
<h1>QUẢN LÍ THÔNG TIN SẢN PHẨM</h1>

@if (@ViewData["Mess"] != null)
{
    <p style="visibility: hidden;" id="error">@ViewData["Mess"]</p>
}
<button class="btn btn-primary" id="changeform" type="button">Thêm mới</button>
<hr style="color:red;" />

<div class="modal" id="formDataModal" role="dialog">
    <div class="modal-dialog modal-md" style="text-align:left; background-color:white; max-width:900px">
        <div style="width:900px;">
            <form id="formdata" asp-action="Save" class="form-horizontal d-block" enctype="multipart/form-data">
                <div class="modal-content justify-content-center" style="border-width:1px;">
                    <div class="modal-header" style="width:800px;">
                        <h2 class="modal-title text-center"><strong><i class="fa fa-cubes" aria-hidden="true" style="margin-right:5px;"></i>THÔNG TIN SẢN PHẨM</strong></h2>
                    </div>
                    <div class="modal-body">
                        <input asp-for="Id" style="width:0px;height:0px;visibility: hidden;" hidden="hidden" />
                        <input asp-for="ViewCount" style="width:0px;height:0px;visibility: hidden;" hidden="hidden" />
                        <input asp-for="LikeCount" style="width:0px;height:0px;visibility: hidden;" hidden="hidden" />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Tên sản phầm:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-9">
                                        <input asp-for="Name" class="form-control" placeholder="Product name" maxlength="200" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Tên nhãn hiệu:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("BrandId", StoreItems, new { @maxlength = "30", @class = "searchText form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-3"><strong>Giá nhập:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-9">
                                        @Html.TextBox("ImportPrice", decimal.Parse(Model.ImportPrice.ToString("0.##")), new { @maxlength = "10", @class = "required form-control"})
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-3"><strong>Giá bán:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-9">
                                        @Html.TextBox("Price", decimal.Parse(Model.Price.ToString("0.##")), new { @maxlength = "10", @class = "required form-control"})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3"><strong>Trạng thái:<span style="color: red">(*)</span></strong></label>
                            <div class="col-md-6">
                                @Html.DropDownList("Status", new[]
                                {
                                    new SelectListItem{Text="Đang bán", Value="0", Selected = (Model.Status != null ? (Model.Status == 0) : true)},
                                    new SelectListItem{Text="Ngừng bán", Value="1",  Selected = (Model.Status != null ? (Model.Status == 1) : false)}
                                }, new { @class = "form-control iscompany" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-3"><strong>Mô tả:</strong></label>
                            <div class="col-sm-12">
                                @Html.TextAreaFor(c => c.Description, new { @class= "form-control"})
                            </div>
                        </div>
                        <h1>THÔNG TIN CHI TIẾT SẢN PHẨM</h1>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="row">
                                    <div class="form-check">
                                        <input type="checkbox" id="ckbAll" class="form-check-input" />
                                        <h4 class="form-check-label"><strong>Chọn tất cả</strong></h4>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row" style="height: 500px; overflow-y: scroll;border-style: dotted dashed solid double;">
                                    @if (Model != null && Model.ColorList.Count >= 0 && Model.ColorList != null && Model.SizeList.Count >= 0 && Model.SizeList != null)
                                    {
                                        @for (int i = 0; i < Model.ColorList.Count; i++)
                                        {
                                            @Html.HiddenFor(m => m.ColorList[i].Id)
                                            @Html.HiddenFor(m => m.ColorList[i].VariationId)
                                            @Html.HiddenFor(m => m.ColorList[i].ProductId)
                                            <div class="form-check col-md-12 m-2">
                                                @Html.CheckBoxFor(c => c.ColorList[i].IsChecked, new {@class = "form-check-input"})
                                                <label class="form-check-label">
                                                    <strong>(@Model.ColorList[i].HEXCode) - @Model.ColorList[i].Name </strong><img style="width:120px;height:30px; border;1px solid; margin-left:10px;border:1px black solid;" src="~/images/@Model.ColorList[i].Image" />
                                                </label>
                                            </div>
                                            <div class="campic col-md-3">
                                                <img id="@("upimg" + i)" src="https://cdn3.iconfinder.com/data/icons/web-document-icons/512/Upload_Document-512.png" onclick="uploadImage(@i)" width="50">
                                                <input type="file" asp-for="ColorList[i].Image_Upload" class="@("picImg" + i)" style="display: none;" />
                                            </div>
                                            <div class="col-md-9 row">
                                                @{
                                                    Model.ColorList[i].SizeAndStock = @Model.SizeList;
                                                }
                                                @for (int j = 0; j < Model.SizeList.Count; j++)
                                                {
                                                    <div class="form-group col-md-3">
                                                        <label class="col-sm-4" style="text-align: left;">
                                                            (@Model.SizeList[j].Code)
                                                        </label>
                                                        <div class="col-sm-12">
                                                            @Html.TextBoxFor(c => c.ColorList[i].SizeAndStock[j].QuantityInstock, new {@class = "form-control quantityInstock"})
                                                            @Html.HiddenFor(m => m.ColorList[i].SizeAndStock[j].Id)
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-sm btn-success" id="cpCopyBtn"><i class="fa fa-check" aria-hidden="true"></i> Lưu thông tin</button>
                        <button type="button" class="btn btn-sm btn-default btn-dimiss-modal" onclick="closeModalDialog()">
                            <i class="fa fa-times"></i> Đóng
                        </button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title" style="background-color:#E5E5E5; text-align:center; height:50px; padding:10px 10px 10px 10px;"><i class="fa fa-cubes" aria-hidden="true" style="margin-right:10px;"></i>DANH SÁCH SẢN PHẨM</h3>
        </div>
        <div class="panel-body">
            <div class="table-responsive" style="overflow-y: auto; max-height: 700px;">
                <table class="table table-bordered table-hover sticky-table">
                    <thead class="sticky-header">
                        <tr>
                            <th style ="width:100px;">Hình ảnh</th>
                            <th style="width:220px;">Tên sản phẩm</th>
                            <th>Nhãn hiệu</th>
                            <th>Giá nhập</th>
                            <th>Giá bán</th>
                            <th style="width:120px;">Lượt tim <i class="fa fa-heart" aria-hidden="true"></i></th>
                            <th style="width:120px;">Lượt thích <i class="fa fa-thumbs-up" aria-hidden="true"></i></th>
                            <th style="width:120px;">Trạng thái</th>
                            <th>Mô tả</th>
                            <th>Chi tiết</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ProductList != null)
                        {
                            @foreach (var item in Model.ProductList)
                            {
                                string img = Model.ProductVariationList.Where(c => c.ProductId == item.Id).Select(c => c.Image).FirstOrDefault().NullToString();
                                <tr>
                                    <td>
                                        <img style="width:120px;height:50px;" src="~/images/@img" />
                                    </td>
                                    <td>
                                        @item.Name
                                    </td>
                                    <td>
                                        @(lstBrand.Where(c => c.Id == item.BrandId).Select(c => c.Name).FirstOrDefault())
                                    </td>
                                    <td>
                                        @(item.ImportPrice.ToString("0.##"))
                                    </td>
                                    <td>
                                        @(item.Price.ToString("0.##"))
                                    </td>
                                    <td>
                                        @(item.ViewCount) <i class="fa fa-heart" aria-hidden="true"></i>
                                    </td>
                                    <td>
                                        @(item.LikeCount) <i class="fa fa-thumbs-up" aria-hidden="true"></i>
                                    </td>
                                    <td>
                                        @(item.Status == 0 ? "Đang bán" : "Ngừng bán")
                                    </td>
                                    <td>
                                        @item.Description
                                    </td>
                                    <td>
                                        <button class="btn btn-info" onclick="location.href='@Url.Action("Detail", "ProductMGR",new { id = item.Id})'" />
                                        <i class="fa fa-eye" aria-hidden="true"></i>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="container">
    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            <li class="page-item">
                <a class="page-link" asp-controller="ProductMGR" asp-action="Index" asp-route-pg="1">First</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-controller="ProductMGR" asp-action="Index" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
            </li>

            @for (int pge = pager.StartPage; pge < pager.EndPage; pge++)
            {
                <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="ProductMGR" asp-action="Index" asp-route-pg="@pge"> @pge</a>
                </li>
            }

            <li class="page-item">
                <a class="page-link" asp-controller="ProductMGR" asp-action="Index" asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-controller="ProductMGR" asp-action="Index" asp-route-pg="@(pager.TotalPages)">Last</a>
            </li>
        </ul>
    }
</div>

<div id="ViewDetail" class="modal modal-default in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="padding: 5px 15px;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
                <h3 class="modal-title text-left">Thông tin nhãn hiệu</h3>
            </div>
            <div class="modal-body">
                <h5>Tên nhãn hiệu:<strong id="namee"></strong></h5>
                <h5>Lượt tìm kiếm:<strong id="searchcount"></strong></h5>
                <h5>Trạng thái:<strong id="status"></strong></h5>
                <h5>Mô tả:<strong id="description"></strong></h5>
            </div>
            <div class="modal-footer" style="position:relative;clear:both;z-index:1000000" id="transport-footer">
                <button type="button" class="btn btn-default pull-left btn-sm" data-dismiss="modal" onclick="btnClose()"><i class="fa fa-times"></i>Đóng</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function uploadImage(id){
        let picImgdata = ".picImg" + id;
        let upimg = "#upimg" + id;
        $(picImgdata).click();
        let flag = 0;
        if (window.File && window.FileList && window.FileReader) {
            $(picImgdata).on("change", function (e) {
                flag++;
                if(flag <= 1){
                    var files = e.target.files,
                        filesLength = files.length;
                    for (var i = 0; i < filesLength; i++) {
                        var f = files[0];
                        var fileReader = new FileReader();
                        fileReader.onload = (function (e) {
                            var file = e.target;
                            $("<span class=\"pip-file\">" +
                                "<img style=\"width: 180px;height: 150px;\" class=\"picThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
                                "<span class=\"remove-img\"><img src ='http://www.elahmad.com/images/icon_close_16px.gif'></span>" +
                                "</span>").insertAfter(picImgdata);
                            $(".remove-img").click(function () {
                                $(this).parent(".pip-file").remove();
                                $(picImgdata).val('');
                            });
                            $(upimg).hide();
                            $('.remove-img').click(function () {
                                $(upimg).show();
                            });
                        });
                        fileReader.readAsDataURL(f);
                    }
                }  
                
            });
        } else {
            alert("Your browser doesn't support to File API")
        }
    }

    $(document).ready(function () {
        $('#formdata').hide();
        var er = document.getElementById('error')
        if (er != null) {
            if ($('#error').text() == 'Failed')
                swal("Không thành công", "Vui lòng xem lại thông tin đã nhập", "error");
            else
                swal("Thành công", "Bạn đã lưu thành công thông tin đã nhập", "success");
        }

        $('#ImportPrice, #Price, .quantityInstock').keyup(function () {
            let regex = /^[0-9]+$/;
            if (!regex.test($(this).val()))
                $(this).val($(this).val().replace(/[^0-9.]/g, ""));
        });

        $('#ckbAll').change(function () {
            if ($(this).is(':checked')) {
                $('.form-check-input').prop('checked', true);
            } else {
                $('.form-check-input').prop('checked', false);
            }
        });
    });

    function ViewDetailData(id) {
        $.getJSON("/Brand/Detail?id=" + id, function (data) {
            $("#Name").val(data.name);
            $("#Description").val(data.description);
            $("#Status").val(data.status);
            $("#Id").val(data.id);
            document.getElementById('namee').innerText = data.name;
            document.getElementById('searchcount').innerText = data.searchcount;
            document.getElementById('status').innerText = data.status ? "Đang sử dụng" : "Không sử dụng";
            document.getElementById('description').innerText = data.description;
            $("#changeform").text("Thêm mới");
            $('#ViewDetail').modal('show');
        });
    }
    function btnClose() {
        $('#ViewDetail').modal('hide');
    }

    function checkValidateData() {
        if ($('#Name').val() == '') {
            sweetAlert("Thông báo", "Thông tin tên sản phẩm không được để trống", "error");
            return false;
        }
        if (parseFloat($('#BrandId').val()) == -1) {
            sweetAlert("Thông báo", "Thông tin tên sản phẩm không được để trống", "error");
            return false;
        }
        if ($('#ImportPrice').val() == '') {
            sweetAlert("", "Thông tin giá nhập không được để trống", "error");
            return false;
        }
        if (isNaN($('#ImportPrice').val())) {
            sweetAlert("", "Thông tin giá nhập chỉ bao gồm kí tự số", "error");
            return false;
        }
        if (parseFloat($('#ImportPrice').val() || 0) < 0 || parseFloat($('#ImportPrice').val() || 0) === 0) {
            sweetAlert("", "Thông tin giá nhập phải có giá trị lớn hơn 0", "error");
            return false;
        }
        if ($('#Price').val() == '') {
            sweetAlert("", "Thông tin giá bán không được để trống", "error");
            return false;
        }
        if (isNaN($('#Price').val())) {
            sweetAlert("", "Thông tin giá bán chỉ bao gồm kí tự số", "error");
            return false;
        }
        if (parseFloat($('#Price').val() || 0) < 0 || parseFloat($('#ImportPrice').val() || 0) === 0) {
            sweetAlert("", "Thông tin giá bán phải có giá trị lớn hơn 0", "error");
            return false;
        }
        return true;
    }

    $('#changeform').on('click', function () {
        $('#formDataModal').modal('show');
    })

    function closeModalDialog() {
        $('#formDataModal').modal('hide');
    }
</script>
